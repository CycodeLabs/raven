name: release

on:
  release:
    types: [published]

jobs:
  test_release:
    permissions:
      contents: read
    name: Test Release
    runs-on: ubuntu-latest
    steps:
    - uses: cycodelabs/cimon-action@v0
      with:
        # Turn prevent once policy is verified
        # prevent: true
        client-id: ${{ secrets.CIMON_CLIENT_ID }}
        secret: ${{ secrets.CIMON_SECRET }}
        fail-on-error: true

    - name: Checkout
      uses: actions/checkout@v4

    - name: Test Organization
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        make test-build

  publish:
    name: Release to PyPI
    runs-on: ubuntu-latest
    needs: test_release
    permissions:
      id-token: write
    if: ${{ startsWith(github.ref_name, 'v') }}
    steps:
      - uses: cycodelabs/cimon-action@v0
        with:
          # Turn prevent once policy is verified
          # prevent: true
          client-id: ${{ secrets.CIMON_CLIENT_ID }}
          secret: ${{ secrets.CIMON_SECRET }}
          fail-on-error: true

      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build

      - name: Build package
        env:
          RAVEN_VERSION: ${{ github.ref_name }}
        run: python -m build

      - name: Publish package
        uses: pypa/gh-action-pypi-publish@release/v1